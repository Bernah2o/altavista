# Generated by Django 5.2 on 2025-04-11 03:00

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaIncidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('color', models.CharField(default='#3498db', help_text='Código de color en formato hexadecimal (ej: #3498db)', max_length=7, verbose_name='Color (HEX)')),
                ('activa', models.BooleanField(default=True, verbose_name='Activa')),
            ],
            options={
                'verbose_name': 'Categoría de Incidencia',
                'verbose_name_plural': 'Categorías de Incidencias',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='FondoReserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del fondo')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('monto_objetivo', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Monto objetivo')),
                ('monto_actual', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Monto actual')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_objetivo', models.DateField(blank=True, null=True, verbose_name='Fecha objetivo')),
                ('estado', models.CharField(default='activo', max_length=20, verbose_name='Estado')),
                ('porcentaje_cuota', models.DecimalField(decimal_places=2, default=0, help_text='Porcentaje de cada cuota que se destina a este fondo', max_digits=5, verbose_name='Porcentaje de cuota (%)')),
            ],
            options={
                'verbose_name': 'Fondo de Reserva',
                'verbose_name_plural': 'Fondos de Reserva',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Incidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_reporte', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de reporte')),
                ('tipo', models.CharField(choices=[('mantenimiento', 'Mantenimiento'), ('seguridad', 'Seguridad'), ('convivencia', 'Convivencia'), ('solicitud', 'Solicitud'), ('queja', 'Queja o Reclamo'), ('otro', 'Otro')], max_length=50, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('ubicacion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ubicación específica')),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=20, verbose_name='Prioridad')),
                ('estado', models.CharField(choices=[('reportada', 'Reportada'), ('en_proceso', 'En Proceso'), ('resuelta', 'Resuelta'), ('cancelada', 'Cancelada')], default='reportada', max_length=30, verbose_name='Estado')),
                ('fecha_ultima_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de última actualización')),
                ('fecha_cierre', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de cierre')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='incidencias/', verbose_name='Imagen')),
                ('requiere_mantenimiento', models.BooleanField(default=False, verbose_name='Requiere mantenimiento')),
                ('visible_para_propietario', models.BooleanField(default=True, verbose_name='Visible para el propietario')),
            ],
            options={
                'verbose_name': 'Incidencia',
                'verbose_name_plural': 'Incidencias',
                'ordering': ['-fecha_reporte'],
            },
        ),
        migrations.CreateModel(
            name='PropiedadHorizontal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre de la propiedad')),
                ('nit', models.CharField(max_length=20, unique=True, verbose_name='NIT')),
                ('direccion', models.CharField(max_length=255, verbose_name='Dirección')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico')),
                ('fecha_constitucion', models.DateField(verbose_name='Fecha de constitución')),
                ('representante_legal', models.CharField(max_length=100, verbose_name='Representante legal')),
                ('cuenta_bancaria', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cuenta bancaria')),
                ('banco', models.CharField(blank=True, max_length=100, null=True, verbose_name='Banco')),
                ('total_viviendas', models.PositiveIntegerField(default=160, verbose_name='Total de viviendas')),
            ],
            options={
                'verbose_name': 'Propiedad Horizontal',
                'verbose_name_plural': 'Propiedades Horizontales',
            },
        ),
        migrations.CreateModel(
            name='AreaComun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('tipo', models.CharField(choices=[('recreativa', 'Área Recreativa'), ('social', 'Área Social'), ('deportiva', 'Área Deportiva'), ('servicio', 'Área de Servicio'), ('otro', 'Otro')], default='social', max_length=20, verbose_name='Tipo de área')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('capacidad', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidad')),
                ('requiere_reserva', models.BooleanField(default=False, verbose_name='Requiere reserva')),
                ('horario_apertura', models.TimeField(blank=True, null=True, verbose_name='Horario de apertura')),
                ('horario_cierre', models.TimeField(blank=True, null=True, verbose_name='Horario de cierre')),
                ('esta_activa', models.BooleanField(default=True, verbose_name='Está activa')),
                ('ubicacion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ubicación')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='areas_comunes/', verbose_name='Imagen')),
                ('reglas_uso', models.TextField(blank=True, null=True, verbose_name='Reglas de uso')),
                ('tarifa', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Tarifa de uso')),
            ],
            options={
                'verbose_name': 'Área Común',
                'verbose_name_plural': 'Áreas Comunes',
                'ordering': ['nombre'],
                'indexes': [models.Index(fields=['nombre'], name='app_altavis_nombre_1903d4_idx'), models.Index(fields=['tipo'], name='app_altavis_tipo_8d269e_idx'), models.Index(fields=['requiere_reserva'], name='app_altavis_requier_ead05b_idx'), models.Index(fields=['esta_activa'], name='app_altavis_esta_ac_80c2cc_idx')],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionReservas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dias_anticipacion_min', models.PositiveSmallIntegerField(default=1, help_text='Días mínimos de anticipación para realizar una reserva', verbose_name='Días mínimos de anticipación')),
                ('dias_anticipacion_max', models.PositiveSmallIntegerField(default=30, help_text='Días máximos de anticipación para realizar una reserva', verbose_name='Días máximos de anticipación')),
                ('duracion_maxima_horas', models.PositiveSmallIntegerField(default=4, help_text='Duración máxima de una reserva en horas', verbose_name='Duración máxima (horas)')),
                ('reservas_max_semana', models.PositiveSmallIntegerField(default=2, help_text='Máximo número de reservas que puede hacer un propietario por semana', verbose_name='Máximo de reservas por semana')),
                ('requiere_aprobacion', models.BooleanField(default=True, help_text='Si es True, las reservas deben ser aprobadas por un administrador', verbose_name='Requiere aprobación administrativa')),
                ('mensaje_politicas', models.TextField(blank=True, help_text='Texto que se mostrará a los propietarios al hacer reservas', null=True, verbose_name='Mensaje de políticas de reserva')),
                ('areas_disponibles', models.ManyToManyField(blank=True, related_name='configuraciones_reserva', to='app_altavista.areacomun', verbose_name='Áreas disponibles para reserva')),
            ],
            options={
                'verbose_name': 'Configuración de Reservas',
                'verbose_name_plural': 'Configuraciones de Reservas',
            },
        ),
        migrations.CreateModel(
            name='ElementoAreaComun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del elemento')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('fecha_adquisicion', models.DateField(blank=True, null=True, verbose_name='Fecha de adquisición')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor')),
                ('estado', models.CharField(default='Bueno', max_length=50, verbose_name='Estado')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='elementos_areas/', verbose_name='Imagen')),
                ('area_comun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elementos', to='app_altavista.areacomun', verbose_name='Área común')),
            ],
            options={
                'verbose_name': 'Elemento de Área Común',
                'verbose_name_plural': 'Elementos de Áreas Comunes',
                'ordering': ['area_comun', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido')),
                ('documento_identidad', models.CharField(max_length=20, unique=True, verbose_name='Documento de identidad')),
                ('cargo', models.CharField(choices=[('administrador', 'Administrador'), ('contador', 'Contador'), ('seguridad', 'Seguridad'), ('mantenimiento', 'Mantenimiento'), ('aseo', 'Aseo'), ('otro', 'Otro')], max_length=50, verbose_name='Cargo')),
                ('fecha_contratacion', models.DateField(verbose_name='Fecha de contratación')),
                ('fecha_terminacion', models.DateField(blank=True, null=True, verbose_name='Fecha de terminación')),
                ('salario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Salario')),
                ('telefono', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico')),
                ('direccion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Dirección')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('horario_entrada', models.TimeField(blank=True, null=True, verbose_name='Horario de entrada')),
                ('horario_salida', models.TimeField(blank=True, null=True, verbose_name='Horario de salida')),
                ('dias_trabajo', models.CharField(blank=True, help_text='Ej: Lunes a Viernes, Fines de semana, etc.', max_length=100, null=True, verbose_name='Días de trabajo')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='empleados/', verbose_name='Foto')),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='empleado', to=settings.AUTH_USER_MODEL, verbose_name='Usuario del sistema')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'ordering': ['apellido', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('tipo', models.CharField(choices=[('acta', 'Acta'), ('circular', 'Circular'), ('reglamento', 'Reglamento'), ('contrato', 'Contrato'), ('financiero', 'Documento Financiero'), ('legal', 'Documento Legal'), ('otro', 'Otro')], max_length=50, verbose_name='Tipo')),
                ('fecha_publicacion', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de publicación')),
                ('archivo', models.FileField(upload_to='documentos/', verbose_name='Archivo')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('publico', models.BooleanField(default=True, help_text='Si es público, todos los propietarios pueden verlo', verbose_name='Documento público')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentos_creados', to='app_altavista.empleado', verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
                'ordering': ['-fecha_publicacion', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='CuotaAdministracion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('año', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)], verbose_name='Año')),
                ('mes', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Mes')),
                ('valor_base', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor base')),
                ('fecha_vencimiento', models.DateField(verbose_name='Fecha de vencimiento')),
                ('recargo_mora', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Recargo por mora (%)')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cuotas_creadas', to='app_altavista.empleado', verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Cuota de Administración',
                'verbose_name_plural': 'Cuotas de Administración',
                'ordering': ['-año', '-mes'],
            },
        ),
        migrations.CreateModel(
            name='Comunicado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('contenido', models.TextField(verbose_name='Contenido')),
                ('tipo', models.CharField(choices=[('general', 'General'), ('importante', 'Importante'), ('urgente', 'Urgente'), ('informativo', 'Informativo')], default='general', max_length=20, verbose_name='Tipo')),
                ('fecha_publicacion', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de publicación')),
                ('fecha_expiracion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de expiración')),
                ('adjuntos', models.FileField(blank=True, null=True, upload_to='comunicados/', verbose_name='Archivos adjuntos')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('autor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comunicados_creados', to='app_altavista.empleado', verbose_name='Autor')),
            ],
            options={
                'verbose_name': 'Comunicado',
                'verbose_name_plural': 'Comunicados',
                'ordering': ['-fecha_publicacion'],
            },
        ),
        migrations.CreateModel(
            name='Carpeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('publico', models.BooleanField(default=True, verbose_name='Carpeta pública')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('carpeta_padre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcarpetas', to='app_altavista.carpeta', verbose_name='Carpeta padre')),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carpetas_creadas', to='app_altavista.empleado', verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Carpeta',
                'verbose_name_plural': 'Carpetas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Administracion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico')),
                ('horario_atencion', models.TextField(blank=True, null=True, verbose_name='Horario de atención')),
                ('direccion', models.CharField(blank=True, max_length=200, null=True, verbose_name='Dirección')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de inicio de gestión')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de fin de gestión')),
                ('activa', models.BooleanField(default=True, verbose_name='Administración activa')),
                ('administrador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administraciones', to='app_altavista.empleado', verbose_name='Administrador')),
            ],
            options={
                'verbose_name': 'Administración',
                'verbose_name_plural': 'Administraciones',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='IncidenciaCategoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de asignación')),
                ('asignado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categorias_asignadas', to='app_altavista.empleado', verbose_name='Asignado por')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidencias_asignadas', to='app_altavista.categoriaincidencia', verbose_name='Categoría')),
                ('incidencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorias_asignadas', to='app_altavista.incidencia', verbose_name='Incidencia')),
            ],
            options={
                'verbose_name': 'Asignación de Categoría',
                'verbose_name_plural': 'Asignaciones de Categorías',
            },
        ),
        migrations.CreateModel(
            name='Mantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('preventivo', 'Preventivo'), ('correctivo', 'Correctivo'), ('mejora', 'Mejora'), ('emergencia', 'Emergencia')], default='correctivo', max_length=20, verbose_name='Tipo')),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=20, verbose_name='Prioridad')),
                ('titulo', models.CharField(help_text='Título breve del mantenimiento', max_length=200, verbose_name='Título')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('fecha_solicitud', models.DateField(auto_now_add=True, verbose_name='Fecha de solicitud')),
                ('fecha_programada', models.DateField(verbose_name='Fecha programada')),
                ('fecha_inicio', models.DateField(blank=True, null=True, verbose_name='Fecha de inicio')),
                ('fecha_finalizacion', models.DateField(blank=True, null=True, verbose_name='Fecha de finalización')),
                ('presupuesto', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Presupuesto')),
                ('costo_final', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Costo final')),
                ('estado', models.CharField(choices=[('programado', 'Programado'), ('en_proceso', 'En Proceso'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado')], default='programado', max_length=30, verbose_name='Estado')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('requiere_corte_servicios', models.BooleanField(default=False, verbose_name='Requiere corte de servicios')),
                ('servicios_afectados', models.CharField(blank=True, help_text='Ej: Agua, Luz, Gas, etc.', max_length=255, null=True, verbose_name='Servicios afectados')),
                ('duracion_estimada', models.PositiveIntegerField(default=1, verbose_name='Duración estimada (horas)')),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mantenimientos', to='app_altavista.areacomun', verbose_name='Área común')),
                ('incidencia', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mantenimiento', to='app_altavista.incidencia', verbose_name='Incidencia relacionada')),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mantenimientos_responsable', to='app_altavista.empleado', verbose_name='Responsable')),
            ],
            options={
                'verbose_name': 'Mantenimiento',
                'verbose_name_plural': 'Mantenimientos',
                'ordering': ['-fecha_programada', 'estado', 'prioridad'],
            },
        ),
        migrations.CreateModel(
            name='ActividadMantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=255, verbose_name='Descripción')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_proceso', 'En Proceso'), ('completada', 'Completada'), ('cancelada', 'Cancelada')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('orden', models.PositiveSmallIntegerField(default=1, verbose_name='Orden')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('fecha_completada', models.DateField(blank=True, null=True, verbose_name='Fecha completada')),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actividades_mantenimiento', to='app_altavista.empleado', verbose_name='Responsable')),
                ('mantenimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actividades', to='app_altavista.mantenimiento', verbose_name='Mantenimiento')),
            ],
            options={
                'verbose_name': 'Actividad de Mantenimiento',
                'verbose_name_plural': 'Actividades de Mantenimiento',
                'ordering': ['mantenimiento', 'orden'],
            },
        ),
        migrations.CreateModel(
            name='MovimientoFondo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now_add=True, verbose_name='Fecha')),
                ('tipo', models.CharField(choices=[('ingreso', 'Ingreso'), ('gasto', 'Gasto')], max_length=10, verbose_name='Tipo')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Monto')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('comprobante', models.FileField(blank=True, null=True, upload_to='comprobantes_fondos/', verbose_name='Comprobante')),
                ('fondo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimientos', to='app_altavista.fondoreserva', verbose_name='Fondo')),
                ('registrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimientos_fondo', to='app_altavista.empleado', verbose_name='Registrado por')),
            ],
            options={
                'verbose_name': 'Movimiento de Fondo',
                'verbose_name_plural': 'Movimientos de Fondos',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='PagoAdministracion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_pago', models.DateField(verbose_name='Fecha de pago')),
                ('monto_pagado', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Monto pagado')),
                ('forma_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('transferencia', 'Transferencia Bancaria'), ('tarjeta', 'Tarjeta de Crédito/Débito'), ('cheque', 'Cheque'), ('otro', 'Otro')], max_length=30, verbose_name='Forma de pago')),
                ('numero_referencia', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de referencia')),
                ('comprobante', models.FileField(blank=True, null=True, upload_to='comprobantes_pago/', verbose_name='Comprobante')),
                ('estado', models.CharField(choices=[('registrado', 'Registrado'), ('confirmado', 'Confirmado'), ('rechazado', 'Rechazado')], default='registrado', max_length=20, verbose_name='Estado')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('cuota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='app_altavista.cuotaadministracion', verbose_name='Cuota')),
                ('registrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagos_registrados', to='app_altavista.empleado', verbose_name='Registrado por')),
            ],
            options={
                'verbose_name': 'Pago de Administración',
                'verbose_name_plural': 'Pagos de Administración',
                'ordering': ['-fecha_pago', '-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='Presupuesto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('año', models.PositiveIntegerField(verbose_name='Año')),
                ('mes', models.PositiveIntegerField(blank=True, help_text='Si es nulo, se considera un presupuesto anual', null=True, verbose_name='Mes (1-12)')),
                ('categoria', models.CharField(max_length=50, verbose_name='Categoría')),
                ('tipo', models.CharField(choices=[('ingreso', 'Ingreso'), ('gasto', 'Gasto')], max_length=10, verbose_name='Tipo')),
                ('monto_presupuestado', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Monto presupuestado')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='presupuestos_creados', to='app_altavista.empleado', verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Presupuesto',
                'verbose_name_plural': 'Presupuestos',
                'ordering': ['-año', '-mes', 'tipo', 'categoria'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionGeneral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la configuración')),
                ('clave', models.SlugField(unique=True, verbose_name='Clave')),
                ('valor', models.TextField(verbose_name='Valor')),
                ('tipo', models.CharField(choices=[('texto', 'Texto'), ('numero', 'Número'), ('fecha', 'Fecha'), ('booleano', 'Booleano'), ('json', 'JSON')], default='texto', max_length=10, verbose_name='Tipo de dato')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('propiedad', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='configuracion', to='app_altavista.propiedadhorizontal')),
            ],
            options={
                'verbose_name': 'Configuración General',
                'verbose_name_plural': 'Configuraciones Generales',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Propietario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido')),
                ('documento_identidad', models.CharField(max_length=20, unique=True, verbose_name='Documento de identidad')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico')),
                ('fecha_registro', models.DateField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='propietario', to=settings.AUTH_USER_MODEL, verbose_name='Usuario del sistema')),
            ],
            options={
                'verbose_name': 'Propietario',
                'verbose_name_plural': 'Propietarios',
                'ordering': ['apellido', 'nombre'],
            },
        ),
        migrations.AddField(
            model_name='incidencia',
            name='propietario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidencias', to='app_altavista.propietario', verbose_name='Propietario'),
        ),
        migrations.CreateModel(
            name='PropietarioVivienda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_adquisicion', models.DateField(verbose_name='Fecha de adquisición')),
                ('es_propietario', models.BooleanField(default=True, help_text='Si es False, se considera arrendatario', verbose_name='Es propietario')),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relaciones_vivienda', to='app_altavista.propietario', verbose_name='Propietario')),
            ],
            options={
                'verbose_name': 'Relación Propietario-Vivienda',
                'verbose_name_plural': 'Relaciones Propietarios-Viviendas',
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre o Razón Social')),
                ('tipo', models.CharField(choices=[('servicios', 'Servicios'), ('productos', 'Productos'), ('ambos', 'Ambos')], default='servicios', max_length=20, verbose_name='Tipo de Proveedor')),
                ('nit', models.CharField(max_length=20, unique=True, verbose_name='NIT o Documento')),
                ('direccion', models.CharField(max_length=255, verbose_name='Dirección')),
                ('telefono', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo Electrónico')),
                ('contacto_nombre', models.CharField(help_text='Nombre de la persona de contacto', max_length=100, verbose_name='Nombre del Contacto')),
                ('contacto_telefono', models.CharField(max_length=20, verbose_name='Teléfono del Contacto')),
                ('servicios_productos', models.TextField(help_text='Descripción de los servicios o productos que ofrece', verbose_name='Servicios/Productos')),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('bloqueado', 'Bloqueado')], default='activo', max_length=20, verbose_name='Estado')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['nombre'],
                'indexes': [models.Index(fields=['estado'], name='app_altavis_estado_5a3e71_idx'), models.Index(fields=['tipo'], name='app_altavis_tipo_6324f4_idx'), models.Index(fields=['nit'], name='app_altavis_nit_e5efa4_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProgramacionMantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('frecuencia', models.CharField(choices=[('diaria', 'Diaria'), ('semanal', 'Semanal'), ('quincenal', 'Quincenal'), ('mensual', 'Mensual'), ('trimestral', 'Trimestral'), ('semestral', 'Semestral'), ('anual', 'Anual')], max_length=20, verbose_name='Frecuencia')),
                ('dia_semana', models.PositiveSmallIntegerField(blank=True, help_text='Para frecuencias semanales o quincenales', null=True, verbose_name='Día de la semana (1-7)')),
                ('dia_mes', models.PositiveSmallIntegerField(blank=True, help_text='Para frecuencias mensuales, trimestrales, semestrales o anuales', null=True, verbose_name='Día del mes (1-31)')),
                ('mes', models.PositiveSmallIntegerField(blank=True, help_text='Para frecuencias semestrales o anuales', null=True, verbose_name='Mes (1-12)')),
                ('activa', models.BooleanField(default=True, verbose_name='Activa')),
                ('presupuesto_estimado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Presupuesto estimado')),
                ('ultima_generacion', models.DateField(blank=True, null=True, verbose_name='Última generación')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programaciones_mantenimiento', to='app_altavista.areacomun', verbose_name='Área común')),
                ('proveedor_preferido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='programaciones_asignadas', to='app_altavista.proveedor', verbose_name='Proveedor preferido')),
            ],
            options={
                'verbose_name': 'Programación de Mantenimiento',
                'verbose_name_plural': 'Programaciones de Mantenimiento',
            },
        ),
        migrations.CreateModel(
            name='MaterialMantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre del material')),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cantidad')),
                ('unidad_medida', models.CharField(max_length=50, verbose_name='Unidad de medida')),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio unitario')),
                ('fecha_compra', models.DateField(blank=True, null=True, verbose_name='Fecha de compra')),
                ('factura', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número de factura')),
                ('mantenimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materiales', to='app_altavista.mantenimiento', verbose_name='Mantenimiento')),
                ('proveedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materiales_suministrados', to='app_altavista.proveedor', verbose_name='Proveedor')),
            ],
            options={
                'verbose_name': 'Material de Mantenimiento',
                'verbose_name_plural': 'Materiales de Mantenimiento',
            },
        ),
        migrations.AddField(
            model_name='mantenimiento',
            name='proveedor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mantenimientos', to='app_altavista.proveedor', verbose_name='Proveedor'),
        ),
        migrations.CreateModel(
            name='IngresoGasto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha')),
                ('tipo', models.CharField(choices=[('ingreso', 'Ingreso'), ('gasto', 'Gasto')], max_length=10, verbose_name='Tipo')),
                ('categoria', models.CharField(max_length=50, verbose_name='Categoría')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Monto')),
                ('comprobante', models.FileField(blank=True, null=True, upload_to='comprobantes_financieros/', verbose_name='Comprobante')),
                ('estado', models.CharField(choices=[('registrado', 'Registrado'), ('verificado', 'Verificado'), ('anulado', 'Anulado')], default='registrado', max_length=20, verbose_name='Estado')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('metodo_pago', models.CharField(blank=True, max_length=50, null=True, verbose_name='Método de pago')),
                ('numero_factura', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de factura')),
                ('registrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transacciones_registradas', to='app_altavista.empleado', verbose_name='Registrado por')),
                ('pago', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transacciones', to='app_altavista.pagoadministracion', verbose_name='Pago Asociado')),
                ('proveedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transacciones', to='app_altavista.proveedor', verbose_name='Proveedor')),
            ],
            options={
                'verbose_name': 'Ingreso/Gasto',
                'verbose_name_plural': 'Ingresos/Gastos',
                'ordering': ['-fecha', '-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='RegistroAsistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now_add=True, verbose_name='Fecha')),
                ('hora_entrada', models.TimeField(blank=True, null=True, verbose_name='Hora de entrada')),
                ('hora_salida', models.TimeField(blank=True, null=True, verbose_name='Hora de salida')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='app_altavista.empleado', verbose_name='Empleado')),
            ],
            options={
                'verbose_name': 'Registro de Asistencia',
                'verbose_name_plural': 'Registros de Asistencia',
                'ordering': ['-fecha', '-hora_entrada'],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_reserva', models.DateField(verbose_name='Fecha de reserva')),
                ('hora_inicio', models.TimeField(verbose_name='Hora de inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora de fin')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('cancelada', 'Cancelada'), ('completada', 'Completada'), ('no_asistio', 'No Asistió')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('numero_invitados', models.PositiveSmallIntegerField(default=0, verbose_name='Número de invitados')),
                ('motivo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Motivo de la reserva')),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de solicitud')),
                ('fecha_confirmacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de confirmación')),
                ('costo', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Costo')),
                ('pagada', models.BooleanField(default=False, verbose_name='Pagada')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='app_altavista.areacomun', verbose_name='Área común')),
                ('confirmada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservas_confirmadas', to='app_altavista.empleado', verbose_name='Confirmada por')),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='app_altavista.propietario', verbose_name='Propietario')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
                'ordering': ['fecha_reserva', 'hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Reunion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('tipo', models.CharField(choices=[('ordinaria', 'Ordinaria'), ('extraordinaria', 'Extraordinaria'), ('informativa', 'Informativa'), ('comite', 'Comité')], max_length=20, verbose_name='Tipo de reunión')),
                ('fecha_hora', models.DateTimeField(verbose_name='Fecha y hora')),
                ('duracion_estimada', models.DurationField(blank=True, null=True, verbose_name='Duración estimada')),
                ('lugar', models.CharField(max_length=200, verbose_name='Lugar')),
                ('estado', models.CharField(choices=[('programada', 'Programada'), ('en_curso', 'En curso'), ('finalizada', 'Finalizada'), ('cancelada', 'Cancelada'), ('reprogramada', 'Reprogramada')], default='programada', max_length=20, verbose_name='Estado')),
                ('acta', models.FileField(blank=True, null=True, upload_to='actas_reunion/', verbose_name='Acta de reunión')),
                ('documentos', models.FileField(blank=True, null=True, upload_to='documentos_reunion/', verbose_name='Documentos relacionados')),
                ('asistentes', models.ManyToManyField(blank=True, related_name='reuniones', to='app_altavista.propietario', verbose_name='Asistentes')),
                ('organizador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reuniones_organizadas', to='app_altavista.empleado', verbose_name='Organizador')),
            ],
            options={
                'verbose_name': 'Reunión',
                'verbose_name_plural': 'Reuniones',
                'ordering': ['-fecha_hora'],
            },
        ),
        migrations.CreateModel(
            name='SeguimientoIncidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_actualizacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de actualización')),
                ('comentario', models.TextField(verbose_name='Comentario')),
                ('estado_actual', models.CharField(max_length=30, verbose_name='Estado actual')),
                ('archivo_adjunto', models.FileField(blank=True, null=True, upload_to='seguimientos/', verbose_name='Archivo adjunto')),
                ('visible_para_propietario', models.BooleanField(default=True, verbose_name='Visible para el propietario')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos', to='app_altavista.empleado', verbose_name='Empleado')),
                ('incidencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos', to='app_altavista.incidencia', verbose_name='Incidencia')),
            ],
            options={
                'verbose_name': 'Seguimiento de Incidencia',
                'verbose_name_plural': 'Seguimientos de Incidencias',
                'ordering': ['-fecha_actualizacion'],
            },
        ),
        migrations.CreateModel(
            name='VisualizacionDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_visualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de visualización')),
                ('contador', models.PositiveIntegerField(default=1, verbose_name='Contador de visualizaciones')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visualizaciones', to='app_altavista.documento', verbose_name='Documento')),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visualizaciones', to='app_altavista.propietario', verbose_name='Propietario')),
            ],
            options={
                'verbose_name': 'Visualización de Documento',
                'verbose_name_plural': 'Visualizaciones de Documentos',
                'ordering': ['-fecha_visualizacion'],
            },
        ),
        migrations.AddField(
            model_name='documento',
            name='propietarios_vistos',
            field=models.ManyToManyField(related_name='documentos_vistos', through='app_altavista.VisualizacionDocumento', to='app_altavista.propietario', verbose_name='Propietarios que han visto'),
        ),
        migrations.CreateModel(
            name='Vivienda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manzana', models.CharField(choices=[('A', 'Manzana A'), ('B', 'Manzana B'), ('C', 'Manzana C'), ('D', 'Manzana D')], max_length=1, verbose_name='Manzana')),
                ('numero', models.CharField(max_length=10, verbose_name='Número')),
                ('area_m2', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Área total (m²)')),
                ('area_construida_m2', models.DecimalField(decimal_places=2, help_text='Área total construida incluyendo ambas plantas', max_digits=8, verbose_name='Área construida (m²)')),
                ('coeficiente_propiedad', models.DecimalField(decimal_places=4, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Coeficiente de propiedad')),
                ('habitada', models.BooleanField(default=True, verbose_name='Habitada')),
                ('tiene_ampliacion', models.BooleanField(default=False, verbose_name='Tiene ampliación')),
                ('fecha_entrega', models.DateField(blank=True, null=True, verbose_name='Fecha de entrega')),
                ('propietarios', models.ManyToManyField(related_name='viviendas', through='app_altavista.PropietarioVivienda', to='app_altavista.propietario', verbose_name='Propietarios')),
            ],
            options={
                'verbose_name': 'Vivienda',
                'verbose_name_plural': 'Viviendas',
                'ordering': ['manzana', 'numero'],
            },
        ),
        migrations.AddField(
            model_name='propietariovivienda',
            name='vivienda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relaciones_propietario', to='app_altavista.vivienda', verbose_name='Vivienda'),
        ),
        migrations.AddField(
            model_name='pagoadministracion',
            name='vivienda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='app_altavista.vivienda', verbose_name='Vivienda'),
        ),
        migrations.AddField(
            model_name='mantenimiento',
            name='vivienda',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mantenimientos', to='app_altavista.vivienda', verbose_name='Vivienda'),
        ),
        migrations.AddField(
            model_name='incidencia',
            name='vivienda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidencias', to='app_altavista.vivienda', verbose_name='Vivienda'),
        ),
        migrations.CreateModel(
            name='DocumentoCarpeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de asignación')),
                ('carpeta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='app_altavista.carpeta', verbose_name='Carpeta')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carpetas_asignadas', to='app_altavista.documento', verbose_name='Documento')),
            ],
            options={
                'verbose_name': 'Documento en Carpeta',
                'verbose_name_plural': 'Documentos en Carpetas',
                'unique_together': {('documento', 'carpeta')},
            },
        ),
        migrations.AddIndex(
            model_name='empleado',
            index=models.Index(fields=['documento_identidad'], name='app_altavis_documen_8d4f83_idx'),
        ),
        migrations.AddIndex(
            model_name='empleado',
            index=models.Index(fields=['cargo'], name='app_altavis_cargo_23f02b_idx'),
        ),
        migrations.AddIndex(
            model_name='empleado',
            index=models.Index(fields=['activo'], name='app_altavis_activo_538d02_idx'),
        ),
        migrations.AddIndex(
            model_name='cuotaadministracion',
            index=models.Index(fields=['año', 'mes'], name='app_altavis_año_f415cd_idx'),
        ),
        migrations.AddIndex(
            model_name='cuotaadministracion',
            index=models.Index(fields=['fecha_vencimiento'], name='app_altavis_fecha_v_944136_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cuotaadministracion',
            unique_together={('año', 'mes')},
        ),
        migrations.AlterUniqueTogether(
            name='incidenciacategoria',
            unique_together={('incidencia', 'categoria')},
        ),
        migrations.AlterUniqueTogether(
            name='presupuesto',
            unique_together={('año', 'mes', 'categoria', 'tipo')},
        ),
        migrations.AddIndex(
            model_name='propietario',
            index=models.Index(fields=['documento_identidad'], name='app_altavis_documen_9f84b9_idx'),
        ),
        migrations.AddIndex(
            model_name='propietario',
            index=models.Index(fields=['apellido', 'nombre'], name='app_altavis_apellid_e1f74f_idx'),
        ),
        migrations.AddIndex(
            model_name='ingresogasto',
            index=models.Index(fields=['tipo'], name='app_altavis_tipo_cc083e_idx'),
        ),
        migrations.AddIndex(
            model_name='ingresogasto',
            index=models.Index(fields=['categoria'], name='app_altavis_categor_b32d13_idx'),
        ),
        migrations.AddIndex(
            model_name='ingresogasto',
            index=models.Index(fields=['fecha'], name='app_altavis_fecha_ed7132_idx'),
        ),
        migrations.AddIndex(
            model_name='ingresogasto',
            index=models.Index(fields=['estado'], name='app_altavis_estado_9d5726_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='registroasistencia',
            unique_together={('empleado', 'fecha')},
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['fecha_reserva'], name='app_altavis_fecha_r_00e677_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['estado'], name='app_altavis_estado_8f3836_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['propietario'], name='app_altavis_propiet_1761a6_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['area'], name='app_altavis_area_id_a09b7f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reserva',
            unique_together={('area', 'fecha_reserva', 'hora_inicio')},
        ),
        migrations.AddIndex(
            model_name='seguimientoincidencia',
            index=models.Index(fields=['incidencia'], name='app_altavis_inciden_586065_idx'),
        ),
        migrations.AddIndex(
            model_name='seguimientoincidencia',
            index=models.Index(fields=['empleado'], name='app_altavis_emplead_e51a39_idx'),
        ),
        migrations.AddIndex(
            model_name='seguimientoincidencia',
            index=models.Index(fields=['fecha_actualizacion'], name='app_altavis_fecha_a_c249a8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='visualizaciondocumento',
            unique_together={('documento', 'propietario')},
        ),
        migrations.AddIndex(
            model_name='documento',
            index=models.Index(fields=['tipo'], name='app_altavis_tipo_b7623c_idx'),
        ),
        migrations.AddIndex(
            model_name='documento',
            index=models.Index(fields=['fecha_publicacion'], name='app_altavis_fecha_p_86c95c_idx'),
        ),
        migrations.AddIndex(
            model_name='documento',
            index=models.Index(fields=['publico'], name='app_altavis_publico_704ac1_idx'),
        ),
        migrations.AddIndex(
            model_name='vivienda',
            index=models.Index(fields=['manzana', 'numero'], name='app_altavis_manzana_7986c5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vivienda',
            unique_together={('manzana', 'numero')},
        ),
        migrations.AddIndex(
            model_name='propietariovivienda',
            index=models.Index(fields=['propietario', 'vivienda'], name='app_altavis_propiet_5ce8a8_idx'),
        ),
        migrations.AddIndex(
            model_name='propietariovivienda',
            index=models.Index(fields=['es_propietario'], name='app_altavis_es_prop_99d4f8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='propietariovivienda',
            unique_together={('propietario', 'vivienda')},
        ),
        migrations.AddIndex(
            model_name='pagoadministracion',
            index=models.Index(fields=['estado'], name='app_altavis_estado_74b954_idx'),
        ),
        migrations.AddIndex(
            model_name='pagoadministracion',
            index=models.Index(fields=['fecha_pago'], name='app_altavis_fecha_p_63e51f_idx'),
        ),
        migrations.AddIndex(
            model_name='pagoadministracion',
            index=models.Index(fields=['vivienda', 'estado'], name='app_altavis_viviend_7ba693_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pagoadministracion',
            unique_together={('vivienda', 'cuota')},
        ),
        migrations.AddIndex(
            model_name='mantenimiento',
            index=models.Index(fields=['estado'], name='app_altavis_estado_8ab7db_idx'),
        ),
        migrations.AddIndex(
            model_name='mantenimiento',
            index=models.Index(fields=['prioridad'], name='app_altavis_priorid_0d1099_idx'),
        ),
        migrations.AddIndex(
            model_name='mantenimiento',
            index=models.Index(fields=['fecha_programada'], name='app_altavis_fecha_p_74b9ad_idx'),
        ),
        migrations.AddIndex(
            model_name='mantenimiento',
            index=models.Index(fields=['tipo'], name='app_altavis_tipo_59136b_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['estado'], name='app_altavis_estado_7d8b3c_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['prioridad'], name='app_altavis_priorid_d36565_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['tipo'], name='app_altavis_tipo_ddda90_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['fecha_reporte'], name='app_altavis_fecha_r_e68a1a_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['propietario'], name='app_altavis_propiet_fd5d9b_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['vivienda'], name='app_altavis_viviend_e9bf61_idx'),
        ),
    ]
